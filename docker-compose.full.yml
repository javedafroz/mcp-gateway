version: '3.8'

services:
  # Keycloak for authentication
  keycloak-db:
    image: postgres:15
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak_password
    volumes:
      - keycloak_db_data:/var/lib/postgresql/data
    networks:
      - mcp-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak"]
      interval: 30s
      timeout: 10s
      retries: 3

  keycloak:
    image: quay.io/keycloak/keycloak:22.0
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak_password
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 1010
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_LOG_LEVEL: info
      KC_METRICS_ENABLED: true
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin_password
    command: start-dev
    ports:
      - "1010:8080"
    depends_on:
      keycloak-db:
        condition: service_healthy
    networks:
      - mcp-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health/ready || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # MCP Gateway Backend
  mcp-gateway-backend:
    build:
      context: ./packages/backend
      dockerfile: Dockerfile
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - KEYCLOAK_SERVER_URL=http://keycloak:8080
      - KEYCLOAK_REALM=mcp-gateway
      - KEYCLOAK_CLIENT_ID=mcp-gateway-backend
      - GATEWAY_HOST=0.0.0.0
      - GATEWAY_PORT=8090
      - LOG_LEVEL=INFO
      - HTTP_VERIFY_SSL=false
      - HTTP_TIMEOUT=60.0
      - LLM_REQUEST_TIMEOUT=60.0
    ports:
      - "8090:8090"
    depends_on:
      - keycloak
    networks:
      - mcp-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8090/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - ./packages/backend:/app
    restart: unless-stopped

  # MCP Gateway Frontend
  mcp-gateway-frontend:
    build:
      context: ./packages/frontend
      dockerfile: Dockerfile
    environment:
      - REACT_APP_API_URL=http://localhost:8090
      - REACT_APP_KEYCLOAK_URL=http://localhost:1010
      - REACT_APP_KEYCLOAK_REALM=mcp-gateway
      - REACT_APP_KEYCLOAK_CLIENT_ID=mcp-gateway-frontend
    ports:
      - "3000:80"
    depends_on:
      - mcp-gateway-backend
    networks:
      - mcp-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Redis for session storage (optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - mcp-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

networks:
  mcp-network:
    driver: bridge

volumes:
  keycloak_db_data:
